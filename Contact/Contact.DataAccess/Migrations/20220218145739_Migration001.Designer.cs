// <auto-generated />
using System;
using Contact.DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Contact.DataAccess.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20220218145739_Migration001")]
    partial class Migration001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Contact.DataAccess.Entities.ContactInfo", b =>
                {
                    b.Property<Guid>("PersonUUID")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Info")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<short>("InfoType")
                        .HasColumnType("smallint");

                    b.HasKey("PersonUUID");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("Contact.DataAccess.Entities.Person", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("UUID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Contact.DataAccess.Entities.ContactInfo", b =>
                {
                    b.HasOne("Contact.DataAccess.Entities.Person", "Person")
                        .WithMany("ContactInfos")
                        .HasForeignKey("PersonUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Contact.DataAccess.Entities.Person", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
